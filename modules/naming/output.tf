output "standard" {
  description = "Return list of calculated standard names for the VA deployment"
  value = {
    action_group                          = lower("ag-${var.env}-global-${local.subId}")
    action_group_rule                     = lower("agrule-${var.env}-global-${local.subId}")
    app-insights                          = lower("appinsights-${var.env}-${var.location-map[var.location]}-${local.subId}")
    afw_rule                              = lower("afwrule-${var.env}-${var.location-map[var.location]}-${local.subId}")
    afw_rule_collection                   = lower("afwrulecol-${var.env}-${var.location-map[var.location]}-${local.subId}")
    api-connection                        = lower("apic-${var.env}-${var.location-map[var.location]}-${local.subId}")
    api-management                        = lower("apim-${var.env}-${var.location-map[var.location]}-${local.subId}")
    application-gateway                   = lower("agw-${var.env}-${var.location-map[var.location]}-${local.subId}")
    application-gateway-waf-policy        = lower("agwwaf-${var.env}-${var.location-map[var.location]}-${local.subId}")
    app-service-plan                      = lower("appsp-${var.env}-${var.location-map[var.location]}-${local.subId}")
    automation-account                    = lower("auto-${var.env}-${var.location-map[var.location]}-${local.subId}")
    availability-set                      = lower("avs-${var.env}-${var.location-map[var.location]}-${local.subId}")
    azure-firewall                        = lower("azfw-${var.env}-${var.location-map[var.location]}-${local.subId}")
    azure-kubernetes-service              = lower("aks-${var.env}-${var.location-map[var.location]}-${local.subId}")
    backend-pool                          = lower("bep-${var.env}-${var.location-map[var.location]}-${local.subId}")
    bastion_host                          = lower("bastion-${var.env}-${var.location-map[var.location]}-${local.subId}")
    cognitive-search                      = lower("cogsrch-${var.env}-${var.location-map[var.location]}-${local.subId}")
    connection                            = lower("con-${var.env}-${var.location-map[var.location]}-${local.subId}")
    ddos-protection-plan                  = lower("ddos-${var.env}-${var.location-map[var.location]}-${local.subId}")
    event-hub                             = lower("evh-${var.env}-${var.location-map[var.location]}-${local.subId}")
    event-hub-consumer-group              = lower("evcg-${var.env}-${var.location-map[var.location]}-${local.subId}")
    event-hub-namespace                   = lower("evn-${var.env}-${var.location-map[var.location]}-${local.subId}")
    eventhub_authorization_rule           = lower("ehar-${var.env}-${var.location-map[var.location]}-${local.subId}")
    eventhub-namespace-authorization-rule = lower("ehnar-${var.env}-${var.location-map[var.location]}-${local.subId}")
    external-load-balancer                = lower("elb-${var.env}-${var.location-map[var.location]}-${local.subId}")
    front-door                            = lower("fd-${var.env}-${var.location-map[var.location]}-${local.subId}")
    front-door-waf-policy                 = lower("fdwaf-${var.env}-${var.location-map[var.location]}-${local.subId}")
    function-app                          = lower("fnapp-${var.env}-${var.location-map[var.location]}-${local.subId}")
    internal-load-balancer                = lower("ilb-${var.env}-${var.location-map[var.location]}-${local.subId}")
    ip-config                             = lower("ipcfg-${var.env}-${var.location-map[var.location]}-${local.subId}")
    key-vault                             = lower("kv-${var.env}-${var.location-map[var.location]}-${local.subId}")
    local-network-gateway                 = lower("lng-${var.env}-${var.location-map[var.location]}-${local.subId}")
    log-analytics-workspace               = lower("log-${var.env}-${var.location-map[var.location]}-${local.subId}")
    logic-app                             = lower("logic-${var.env}-${var.location-map[var.location]}-${local.subId}")
    managed-identity                      = lower("msi-${var.env}-${var.location-map[var.location]}-${local.subId}")
    monitor-metric-alert                  = lower("metalert-${var.env}-${var.location-map[var.location]}-${local.subId}")
    network-interface                     = lower("nic-${var.env}-${var.location-map[var.location]}-${local.subId}") #mwg
    network-security-group                = lower("nsg-${var.env}-${var.location-map[var.location]}-${local.subId}")
    public-ip-address                     = lower("pip-${var.env}-${var.location-map[var.location]}-${local.subId}")
    public-ip-dns                         = lower("${var.env}${var.location-map[var.location]}${local.subId}")
    private-endpoint                      = lower("pvtend-${var.env}-${var.location-map[var.location]}-${local.subId}")
    proximity-placement-group             = lower("ppg-${var.env}-${var.location-map[var.location]}-${local.subId}") #mwg
    recovery-services-vault               = lower("rsv-${var.env}-${var.location-map[var.location]}-${local.subId}")
    redis                                 = lower("redis-${var.env}-${var.location-map[var.location]}-${local.subId}")
    region-acronym                        = lower(var.location-map[var.location])
    resource-group                        = lower("rg-${var.env}-${var.location-map[var.location]}-${local.subId}")
    resource-health-alert                 = lower("hlthalert-${var.env}-${var.location-map[var.location]}-${local.subId}")
    route-table                           = lower("rt-${var.env}-${var.location-map[var.location]}-${local.subId}")
    sql-database                          = lower("sqldb${var.env}${var.location-map[var.location]}${local.subId}")
    sql-server                            = lower("sql${var.env}${var.location-map[var.location]}${local.subId}")
    standard-output                       = lower("${var.env}-${var.location-map[var.location]}-${local.subId}")
    storage-account                       = lower("st${var.env}${var.location-map[var.location]}${substr(var.subId, -4,  4)}")   # only alpha numerics allowed in storage accounts
    storage-account-provisioner           = lower("st${var.env}${var.location-map[var.location]}${substr(var.subId, -12, 12)}")  # only alpha numerics allowed in storage accounts
    storage-alerts                        = lower("stalert${var.env}${var.location-map[var.location]}${local.subId}")
    storage-boot-diags                    = lower("stdiag${var.env}${var.location-map[var.location]}${local.subId}")
    storage-flow-logs                     = lower("stflow${var.env}${var.location-map[var.location]}${local.subId}")
    storage-os-disk                       = lower("osdisk-${var.env}-${var.location-map[var.location]}-${local.subId}")
    storage-data-disk                     = lower("datadisk-${var.env}-${var.location-map[var.location]}-${local.subId}") #mwg
    storage-splunk                        = lower("stsplunk${var.env}${var.location-map[var.location]}${local.subId}")
    subnet                                = lower("sn-${var.env}-${var.location-map[var.location]}-${local.subId}")
    traffic-manager-profile               = lower("traf-${var.env}-global-${local.subId}")
    virtual-machine                       = lower("vm-${var.env}-${var.location-map[var.location]}-${local.subId}") #mwg
    virtual-machine-scaleset              = lower("vmss-${var.env}-${var.location-map[var.location]}-${local.subId}")
    virtual-machine-windows               = lower("${var.env}${var.location-map[var.location]}${substr(var.subId,   -4,  4)}")
    virtual-network                       = lower("vnet-${var.env}-${var.location-map[var.location]}-${local.subId}")
    vnet-gateway                          = lower("gwy-${var.env}-${var.location-map[var.location]}-${local.subId}")
    vnet-peering                          = lower("peer-${var.env}-${var.location-map[var.location]}-${local.subId}")
  }
}